<%- include ./partials/head %>
    <title>ATI</title>

    </head>

    <body>
            <nav class="navbar navbar-default navbar-noMargin" style="padding-right:1%">
                    <div class="container-fluid">
                        <div class="navbar-header">
                            <a class="navbar-brand" href="/">ATI</a>
                        </div>
                        <ul class="nav navbar-nav">
                            <li class="nav-item" style="color:white;">
                                <a class="nav-link" href="#" style="color:white">
                                    <%= __('navbar.questionnaire') %>
                                </a>
                            </li>
                        </ul>
                        <ul class="nav navbar-nav navbar-right">
        
                            <li class="li-header-right" style="width:100%">
                                <a href="" onclick="changeLang()">
                                    <img src="./images/lang_de_en.png" class="langImg">
                                    <%= __('toggletext') %>
                                </a>
                            </li>
                        </ul>
                    </div>
                </nav>

<h1><%= atiScore %></h1>

             <!-- <h1>   <%= atiScore %></h1> -->
        <!-- <div class="ct-chart ct-perfect-fourth"></div> -->
        <script>   
             
            /*	var data = {
                    labels: ['1', '2', '3', '4', '5', '6'],
                    series: [
                        [4, 6, 10, 12, 7, 3]
                    ]
                };
                console.log(data);
                new Chartist.Line('.ct-chart', data);
            	
                */

			/*
                    let url = '/db/get/buckets';

                    fetch(url)
                        .then(res => res.json())
                        .then((out) => {
                            console.log(out);
							console.log(out[0].amount);
							var data = {
								labels: [],
								series: [[]]
							};
							for (i=0;i<5;i++) {
								data.labels[i] = out[i].bucket;
								data.series[0][i] = out[i].amount;
							};
							new Chartist.Line('.ct-chart', data);
							console.log(data);
                        })
                        .catch(err => { throw err });
						
			*/
            // let url = '/db/ageAndAti';


            // var options = {
            //     showLine: false,
            //     axisX: {
            //         type: Chartist.AutoScaleAxis,
            //         onlyInteger: true
            //     }
            // };

            // fetch(url)
            //     .then(res => res.json())
            //     .then((out) => {
            //         console.log(out);
            //         var data = {
            //             labels: [],
            //             series: [[]]
            //         };
            //         for (i = 0; i < out.length; i++) {
            //             data.series[0][i] = { x: out[i].Age, y: out[i].AtiScore };
            //         };
            //         console.log(data);
            //         new Chartist.Line('.ct-chart', data, options);
            //     })
            //     .catch(err => { throw err });

            // url = 'db/complex?sel[1]=AtiScore&sel[2]=Age&sel[3]=Education';
            // fetch(url)
            //     .then(res => res.json())
            //     .then((out) => {
            //         console.log(out);
            //     })
            //     .catch(err => { throw err });


            // let testData = JSON.stringify({
            //     UID: 1, Token: 'testOnline', Age: 22, Sex: 1, Ati1: 5, Ati2: 5, Ati3: 6,
            //     Ati4: 5, Ati5: 4, Ati6: 4, Ati7: 5, Ati8: 5, Ati9: 4, AtiScore: 43 / 9
            // });

            // //	let testData = JSON.stringify({UID: 1, Name: 'onlineTest', Description: 'Eine online erstellte Umfrage'});
            // let postUrl = '/db/probandUser';
            // fetch(postUrl, {
            //     headers: {
            //         'Accept': 'application/json',
            //         'Content-Type': 'application/json'
            //     },
            //     method: 'POST',
            //     body: testData
            // })
            //     .then((out) => {
            //         console.log(out);
            //     })
            //     .catch(err => { throw err });
        </script>



        <footer>
            <%- include ./partials/footer %>
        </footer>
        <script> // Select all links with hashes
            $('a[href*="#"]')
                // Remove links that don't actually link to anything
                .not('[href="#"]')
                .not('[href="#0"]')
                .click(function (event) {
                    // On-page links
                    if (
                        location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '')
                        &&
                        location.hostname == this.hostname
                    ) {
                        // Figure out element to scroll to
                        var target = $(this.hash);
                        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
                        // Does a scroll target exist?
                        if (target.length) {
                            // Only prevent default if animation is actually gonna happen
                            event.preventDefault();
                            $('html, body').animate({
                                scrollTop: target.offset().top
                            }, 1000, function () {
                                // Callback after animation
                                // Must change focus!
                                var $target = $(target);
                                $target.focus();
                                if ($target.is(":focus")) { // Checking if the target was focused
                                    return false;
                                } else {
                                    $target.attr('tabindex', '-1'); // Adding tabindex for elements not focusable
                                    $target.focus(); // Set focus again
                                };
                            });
                        }
                    }
                });</script>


        <script src="./chartist/dist/chartist.min.js"></script>
        <script src="./js/result.js"></script>

    </body>

    </html>